import { Button, VerticalBox, HorizontalBox, GroupBox, LineEdit, TextEdit } from "std-widgets.slint";

export struct OpenFileData {
    path: string,
    is_modified: bool,
}

component SidebarButton inherits Button {
    width: 40px;
    height: 40px;
}

component FileTab inherits Rectangle {
    callback clicked();
    in property <string> file-name;
    in property <bool> is-modified;

    width: 120px;
    height: 30px;
    background: lightgray;

    HorizontalLayout {
        Text {
            text: file-name + (is-modified ? "*" : "");
        }
    }

    TouchArea {
        clicked => {
            root.clicked();
        }
    }
}

export global Callbacks {
    callback create_file(string);
    callback open_file(string);
    callback save_file();
    callback update_content(string);
}

export component AppWindow inherits Window {
    title: "Nodian";
    width: 1024px;
    height: 768px;

    in property <[string]> file_tree: [];
    in property <[OpenFileData]> open_files: [];

    in property <string> preview_content: "";

    HorizontalBox {
        VerticalBox {
            width: 50px;
            SidebarButton {
                text: "📝";
            }

            SidebarButton {
                text: "📅";
            }

            SidebarButton {
                text: "🔧";
            }

            SidebarButton {
                text: "⏱️";
            }

            SidebarButton {
                text: "🔒";
            }

            SidebarButton {
                text: "📋";
            }
        }

        VerticalBox {
            HorizontalBox {
                height: 30px;
                LineEdit {
                    placeholder-text: "Enter file name";
                    edited => {
                        Callbacks.create_file(self.text);
                        self.text = "";
                    }
                }

                Button {
                    text: "Save";
                    clicked => {
                        Callbacks.save_file();
                    }
                }
            }

            HorizontalBox {
                for file in open_files: FileTab {
                    file-name: file.path;
                    is-modified: file.is_modified;
                    clicked => {
                        Callbacks.open_file(file.path);
                    }
                }
            }

            HorizontalBox {
                VerticalBox {
                    width: 200px;
                    for file in file_tree: Text {
                        text: file;
                        TouchArea {
                            clicked => {
                                Callbacks.open_file(file);
                            }
                        }
                    }
                }

                TextEdit {
                    edited => {
                        Callbacks.update_content(self.text);
                    }
                }

                Rectangle {
                    width: 50%;
                    background: white;
                    Text {
                        text: root.preview_content;
                    }
                }
            }
        }
    }
}
